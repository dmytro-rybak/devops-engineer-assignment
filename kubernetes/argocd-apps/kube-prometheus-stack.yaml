apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 76.3.0
    chart: kube-prometheus-stack
    helm:
      releaseName: kube-prometheus-stack
      valuesObject:
        alertmanager:
          enabled: false
        kubeApiServer:
          enabled: false
        kubeEtcd:
          enabled: false
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        grafana:
          ingress:
            enabled: true
            hosts:
              - grafana.dmytrorybak.click
            path: /
            extraPaths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: ssl-redirect
                    port:
                      name: use-annotation
            annotations:
              kubernetes.io/ingress.class: alb
              alb.ingress.kubernetes.io/target-type: ip
              alb.ingress.kubernetes.io/scheme: internet-facing
              alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
              alb.ingress.kubernetes.io/ssl-redirect: "443"
              alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
              alb.ingress.kubernetes.io/healthcheck-path: /api/health
              alb.ingress.kubernetes.io/group.name: devops-engineer-assignment
          persistence:
            enabled: true
            storageClassName: gp3
            size: 2Gi
            accessModes: ["ReadWriteOnce"]
          admin:
            existingSecret: grafana-admin
            userKey: admin-user
            passwordKey: admin-password
          dashboards:
            default:
              logs:
                gntId: 15141
                version: 1
                datasource: Loki
          sidecar:
            datasources:
              alertmanager:
                enabled: false
          additionalDataSources:
            - name: Loki
              type: loki
              url: http://grafana-loki.observability.svc.cluster.local:3100
              access: proxy
            - name: Tempo
              type: tempo
              url: http://grafana-tempo.observability.svc.cluster.local:3200
              access: proxy
        prometheus:
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp3
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
            retention: 1d
            retentionSize: 2GiB
  destination:
    server: https://kubernetes.default.svc
    namespace: observability
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    automated:
      prune: true
      selfHeal: true
